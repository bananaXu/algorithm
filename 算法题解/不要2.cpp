#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <stack>
#include <cmath>
#include <vector> 
#include <queue>
#include <set>
#include <ctype.h>
#include <map>
#include <cfloat>
using namespace std;

/*
算法思想：
* *
* *
    * *
	* *
以上面图形为一个单位
加上剩下的就是所求 
*/

int main()
{
	int n, m;
	cin >> n >> m;
	int sum = 0;
	sum += ((n>>2)*(m>>2))<<3;
	sum += (n%4)*(m>>2)*2+(n>>2)*(m%4)*2;
	sum += (n%4 > 2 ? 2 : n%4)*(m%4 > 2 ? 2 : m%4);
	if (n%4 == 3 && m%4 == 3)
		sum ++;
	cout << sum << endl;
	return 0;
}
/*
题目描述
二货小易有一个W*H的网格盒子，网格的行编号为0~H-1，网格的列编号为0~W-1。每个格子至多可以放一块蛋糕，任意两块蛋糕的欧几里得距离不能等于2。
对于两个格子坐标(x1,y1),(x2,y2)的欧几里得距离为:
( (x1-x2) * (x1-x2) + (y1-y2) * (y1-y2) ) 的算术平方根
小易想知道最多可以放多少块蛋糕在网格盒子里。
输入描述:
每组数组包含网格长宽W,H，用空格分割.(1 ≤ W、H ≤ 1000)
输出描述:
输出一个最多可以放的蛋糕数
示例1
输入
3 2
输出
4
*/
