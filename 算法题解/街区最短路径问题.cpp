#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
	int i, n, t, l, r, sum;
	int a[25], b[25];
	cin >> t;
	while (t --)
	{
		cin >> n;
		sum = 0;
		for (i = 1; i <= n; i ++)
		{
			cin >> a[i] >> b[i];
		}
		sort(a+1, a+n+1);
		sort(b+1, b+n+1);
		l = 1;
		r = n;
		while (r > l)
		{
			sum += a[r]+b[r]-a[l]-b[l];
			l ++;
			r --;
		}
		cout << sum << endl;
	}
	return 0;
}
/*
描述
一个街区有很多住户，街区的街道只能为东西、南北两种方向。

住户只可以沿着街道行走。

各个街道之间的间隔相等。

用(x,y)来表示住户坐在的街区。

例如（4,20），表示用户在东西方向第4个街道，南北方向第20个街道。

现在要建一个邮局，使得各个住户到邮局的距离之和最少。

求现在这个邮局应该建在那个地方使得所有住户距离之和最小；

输入
第一行一个整数n<20，表示有n组测试数据，下面是n组数据;
每组第一行一个整数m<20,表示本组有m个住户，下面的m行每行有两个整数0<x,y<100，表示某个用户所在街区的坐标。
m行后是新一组的数据；
输出
每组数据输出到邮局最小的距离和，回车结束；
样例输入
2
3
1 1
2 1
1 2
5
2 9 
5 20
11 9
1 1
1 20
样例输出
2
44
*/
