#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <stack>
#include <cmath>
#include <vector> 
#include <queue>
#include <ctype.h>
using namespace std;

#define MAX(a, b) a > b ? a : b
#define EPS 1e-8

int main()
{
	int i, x, n, m, t, len;
	int a[1005] = {0};
	scanf("%d", &n);
	while (n --)
	{
		scanf("%d", &x);
		if (x == 1)
		{
			printf("1\n");
			continue;
		}
		m = x/3;
		if (x%3 == 1)
		{
			a[0] = 4;
			m --;
		}
		else if (x%3 == 2)
			a[0] = 2;
		else
			a[0] = 1;
		len = 0;
		while (m --)
		{
			for (i = 0; i <= len; i ++)
				a[i] *= 3;
			for (i = 0; i <= len; i ++)
			{
				if (i == len && a[i] > 9)
					len ++;
				a[i+1] += a[i]/10;
				a[i] %= 10;
			}
		}
		for (i = len; i >= 0; i --)
			printf("%d", a[i]);
		printf("\n");
		memset(a, 0, (len+1)*sizeof(int));
	}
	return 0;
} 
/*
最强DE 战斗力
时间限制：1000 ms  |  内存限制：65535 KB
难度：3
描述
春秋战国时期，赵国地大物博，资源非常丰富，人民安居乐业。但许多国家对它虎视眈眈，准备联合起来对赵国发起一场战争。
显然，面对多个国家的部队去作战，赵国的兵力明显处于劣势。战斗力是决定战争成败的关键因素，一般来说，一支部队的战斗
力与部队的兵力成正比。但当把一支部队分成若干个作战队伍时，这个部队的战斗力就会大大的增强。
一支部队的战斗力是可以通过以下两个规则计算出来的：
1.若一支作战队伍的兵力为N，则这支作战队伍的战斗力为N；
2.若将一支部队分为若干个作战队伍，则这支部队的总战斗力为这些作战队伍战斗力的乘积。
比如：一支部队的兵力为5时的战斗力分析如下：
情况
作战安排
总的战斗力
1
1，1，1，1，1（共分为5个作战队伍）
1*1*1*1*1=1
2
1，1，1，2   （共分为4个作战队伍）
1*1*1*2=2
3
1，2，2     （共分为3个作战队伍）
1*2*2=4
4
1，1，3     （共分为3个作战队伍）
1*1*3=3
5
2，3        （共分为2个作战队伍）
2*3=6
6
1，4        （共分为2个作战队伍）
1*4=4
7
5           （共分为1个作战队伍）
5=5

  显然，将部队分为2个作战队伍（一个为2，另一个为3），总的战斗力达到最大！
输入
第一行： N表示有N组测试数据. (2<=N<=5)
接下来有N行，每行有一个整数Ti 代表赵国部队的兵力. （1<=Ti<=1000） i=1，…N
输出
对于每一行测试数据，输出占一行，仅一个整数S，表示作战安排的最大战斗力.
样例输入
2
5
4
样例输出
6
4
*/
